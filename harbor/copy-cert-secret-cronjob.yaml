
# This is a cronjob to copy the certificate secret from kubernetes-dashboard namespace to harbor namespace
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cert-copy
  namespace: kubernetes-dashboard
spec:
  # Launch every 10 days at 23:00
  schedule: '0 23 */10 * *'
  # Let k8s' scheduler a margin of 30 min to launch, 
  # if no has been possible just wait for the next scheduled run.
  startingDeadlineSeconds: 1800
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 2
  # Set suspend to true if you want to execute only manually
  suspend: false
  # Not allow concurrent runs: if the previous has not finished yet, don't run
  concurrencyPolicy: Forbid
  #concurrencyPolicy: Replace
  jobTemplate:
    spec:
      backoffLimit: 0
      # 24 hours after finish to remove the job
      #ttlSecondsAfterFinished: 86400
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: cert-copy
              image:  "bitnami/kubectl:1.29"
              #command: ["tail", "-f", "/dev/null"]
              command: 
                - '/bin/bash'
                - '-c'
                - >-
                  kubectl -n kubernetes-dashboard get secret eucaim.cancerimage.eu -o yaml | sed "/namespace:/d" | sed "/uid:/d" | sed "/creationTimestamp:/d" | sed "/resourceVersion:/d" | sed "/cert-manager.io/d" | kubectl apply -n harbor -f -

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: copy-cert-secret-to-namespace
rules:
  - apiGroups: ["*"]
    resources: ["secrets"]
    verbs: ["get", "create", "update", "patch", "delete"]

---
# Grant access to the default service account of kubernetes-dashboard namespace to the secrets in that origin namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: copy-cert-secret-from-namespace-to-service-account
  namespace: kubernetes-dashboard
subjects:
- kind: ServiceAccount
  name: default
  namespace: kubernetes-dashboard
roleRef:
  kind: ClusterRole
  name: copy-cert-secret-to-namespace
  apiGroup: rbac.authorization.k8s.io

---
# Grant access to the default service account of kubernetes-dashboard namespace to the secrets in the destination namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: copy-cert-secret-to-namespace-to-service-account
  namespace: harbor
subjects:
- kind: ServiceAccount
  name: default
  namespace: kubernetes-dashboard
roleRef:
  kind: ClusterRole
  name: copy-cert-secret-to-namespace
  apiGroup: rbac.authorization.k8s.io


